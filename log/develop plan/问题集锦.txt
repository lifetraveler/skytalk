2017/2/3
1.解决hostiger 服务器上 500错误
	一开始以为是htaccess文件导致的访问权限问题，除夕前一天遇到这个问题，过了一个年，又拿出来处理，给服务商发了问题工单，也是提醒我可能是权限原因导致，限制了思路。因为本地可以运行，一直没有考虑代码层面问题。今天偶尔想了一下，改变数据库配置的时候，页面会提示错误，说明可以访问到controller跟model层面，这就排除了访问权限的问题。难道真的是代码问题？采用最原始的逐行注释排错，果然，问题发现了。问题出现在了 controller 类里  指定了renponse 类型，加了
	
		$this->output->set_content_type('application/json');
		$this->output->set_header("Access-Control-Allow-Headers: Content-type");
//		$this->output->set_header("Access-Control-Allow-Origin", "*");
		$this->output->set_header("Access-Control-Allow-Methods: GET, POST, PUT, OPTIONS");
		$this->output->set_output(json_encode($data));//->_display();
		
	这些东西，问题就在  Access-Control-Allow-Origin  这个 跨域访问权限源 上面。  为什么要加这些东西呢？这里引出了当时遇到的一个问题，就是 跨域访问。刚开始的时候，服务都部署到本地，但是一开始没有自己跑 xmapp 。而是用的phpstorm自己的php服务器，在调用本地提供的一个数据api的时候，提示跨域错误，为了解决这个问题，百度后加入这些。没想到问题出在这里。
	
	但为什么本地是可以的，hostiger上面就有问题呢？我想着应该是服务器apache的配置问题。这个返回消息头参数 不需要 明确指出，只要 Access-Control 相关设定了，就自动返回这个权限了。这里还不是很明白，问题解决了，这块还需要弄得更明白。
	
2.目录结构问题。
	因为目前前台跟后台都部署到一台服务器上面，导致目录 比较乱，目前还没有分开。如果是两台服务器就好办多了。CI的统一入口都是根目录的index.php。不知道这样理解的对不对。这里还需要进一步的了解CI。
3.apache配置rewrite之-----No input file specified.
	http://www.th7.cn/Program/php/201609/962831.shtml
	（二）apacheNo input file specified
	apache No input filespecified,今天是我们配置apache RewriteRule时出现这种问题，解决办法很简单如下
	打开.htaccess 在RewriteRule 后面的index.php教程后面添加一个“?”


2017/2/4
1.目录问题暂时搁置，

2017/2/7
1.分析了一下代码，跟平台的交互是 每次的请求都会做token的验证,token的获取是这样的，如果内存里没有token，则去平台服务
器去调用获取token的方法，获取到token以后，存到一个static变量中，这样就可以从内从中访问了。如果已经存在token，则需
要验证token的时间。

2.token我的理解，想一些api接口这种，重复请求，服务器在方便性的基础上做一些安全性的防护，通过token授权，验证，限制
请求连接的访问权限，次数，时效性这些。session根据平时的理解，更多的是在保持用户登录状态，会话状态这些，虽然从原理上
，都是由服务器生成，但是侧重点不同，当然，你可以将sessionid当做token来使用，但是服务器为了保持这个session，要消耗
更多的资源。

3.Session ID/session token 及和cookie区别

  session ID or session token is a piece of data that is used in network communications
  (often over HTTP) to identify a session, a series of related message exchanges. Session
  identifiers become necessary in cases where the communications infrastructure uses a
  stateless protocol such as HTTP. For example, a buyer who visits a seller's site wants
  to collect a number of articles in a virtual shopping cart and then finalize the shopping
   by going to the site's checkout page. This typically involves an ongoing communication
   where several webpages are requested by the client and sent back to them by the server.
   In such a situation, it is vital to keep track of the current state of the shopper's
   cart, and a session ID is one way to achieve that goal.

  A session ID is typically granted to a visitor on his first visit to a site.
  It is different from a user ID in that sessions are typically short-lived (they expire
  after a preset time of inactivity which may be minutes or hours) and may become invalid
  after a certain goal has been met (for example, once the buyer has finalized his order,
  he cannot use the same session ID to add more items).【短时间存在】

  As session IDs are often used to identify a user that has logged into a website, they
  can be used by an attacker to hijack the session and obtain potential privileges. A
  session ID is often a long randomly-generated string to decrease the probability of
  obtaining a valid one by means of a brute-force search. Many servers perform additional
  verification of the client, in case the attacker has obtained the session ID. Locking a
  session ID to the client's IP address is a simple and effective measure as long as the
  attacker cannot connect to the server from the same address.

  A session token is a unique identifier, usually in the form of a hash generated by
  a hash function that is generated and sent from a server to a client to identify the
  current interaction session. The client usually stores and sends the token as an HTTP
  cookie and/or sends it as a parameter in GET or POST queries. The reason to use session
   tokens is that the client only has to handle the identifier (a small piece of data
   which is otherwise meaningless and thus presents no security risk) - all session data
   is stored on the server (usually in a database, to which the client does not have
   direct access) linked to that identifier. There are many drawbacks of session id and
   it's not enough to fulfill the developer requirements.[vague] Many developers use
   other logic to identify the session.

2016/2/9
1. angularjs $watch ng-include 中的变量引发的问题
    http://blog.csdn.net/blakefez/article/details/50698582
    这个问题坑了真的好久，我猜测是作用域的问题，果然是。
2.加盐hash保存密码的正确方式（上）
    http://blog.csdn.net/lvxiangan/article/details/49201071
2.加盐hash保存密码的正确方式（下）
    http://blog.csdn.net/lvxiangan/article/details/49201085
3.加盐密码哈希：如何正确使用  这个文章是上面上下的合体
    http://blog.jobbole.com/61872/#toc3